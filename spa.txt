SPAファイナル			A:\PJ\spa\spa.txt

GitHub アドレス			https://github.com/SakunM/spa
SPAファイナルReadMe			A:\PJ\spa\readme.txt
前々回の最終バージョン	A:\PJ\JS\all\spas\spa10
前回の最終バージョン	A:\PJ\mamo2\langs\SPA
今回のバージョン		A:\PJ\spa
再々のSPA		A:\プログラミング\書籍サンプル\JS\JavaScript\SPA\再々のSPA.txt

いつも思うけど、イテレーションゼロの構築は、作業量が多い。自分は、HTMLやCSSの生成にPugやCASSを使いたい。なので、
最初はGulpFileの作成からだ、また、第7章以降のサーバー構築のためにルートフォルダは使いたいので、
第3章から第6章までのフロント側の作業はpublicフォルダで行う。でも第1章で作るHTMLやCSSは、npx gulp watch　の後、
ルートフォルダのViewsやSCSSで行う。本書の特徴はブラウザのデベロッパーツールを使い倒すのでずいぶん勉強になった。
プログラミングで、コンパイラのエラーメッセージを頼りにコードを修復するように、デベロッパーツールのエラーを頼りに
PugやSCSSやJSを修復する過程で、セーブすれば自動的に消えるエラーと更新ボタンを押すまで消えないエラーメッセージが有る事を発見。
なので、解決しているのに消えない場合は、更新ボタンを押してみる事も必要だ。



チュートリアルの開始は第3章から始まる。本書の実装の流れはEndToEndと副題にある通り、機能の追加の過程で少しずつ
JavaScriptやHTMLやCSSを改良していくスタイルだ。自分の勘違いはその流れに沿わないとアプリが完成しないと思った事だ。
でも、そうでは無い事に気付いた。ブラウザに描くHTMLを完全に完成させても、動的な部分は最優先で変更できるので差し支えない。
なので、スライダの機能の分離は、先にCSSを分離して、Slider.scssで静的な絵面を完成させてから
Slider.jsの実装に進む事にする。次のイテレートではレイアウトに最新のフロウやグリッドも使ってみたい。


